# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: 부여할 파일에 실행 권한 추가
      run: |
        chmod +x ./gradlew
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build
    - name: Docker 이미지 빌드 및 푸시
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ap-northeast-2
        AWS_ECR_REPOSITORY_URL: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-northeast-2.amazonaws.com
        AWS_ECR_REPOSITORY_NAME: shinhan-stock-friends-rest-api
      run: |
        AWS_ECR_PASSWORD=$(aws ecr get-login-password --region $AWS_REGION)
        docker login --username AWS --password-stdin $AWS_ECR_REPOSITORY_URL <<< $AWS_ECR_PASSWORD
        docker build -t $AWS_ECR_REPOSITORY_NAME .
        docker tag $AWS_ECR_REPOSITORY_NAME:latest $AWS_ECR_REPOSITORY_URL/$AWS_ECR_REPOSITORY_NAME:latest
        docker push $AWS_ECR_REPOSITORY_URL/$AWS_ECR_REPOSITORY_NAME:latest
